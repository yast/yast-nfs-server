Dump	Read
Execute	.target.bash "/bin/systemctl is-enabled nfsserver.service" 0
Read	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]]
Read	.init.scripts.exists "nfslock" true
Read	.sysconfig.nfs.NFS4_SUPPORT nil
Read	.sysconfig.nfs.NFS_SECURITY_GSS nil
Execute	.target.bash "/bin/systemctl is-enabled SuSEfirewall2_init.service" 0
Execute	.target.bash "/bin/systemctl is-enabled SuSEfirewall2_setup.service" 0
Return	true
Dump	Write OK
Read	.target.dir "/projects" nil
Execute	.target.mkdir "/projects" true
Read	.target.dir "/usr" nil
Execute	.target.mkdir "/usr" true
Read	.target.dir "/pub" nil
Execute	.target.mkdir "/pub" true
Write	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]] true
Write	.sysconfig.nfs.NFS4_SUPPORT "no" true
Write	.sysconfig.nfs.NFS_SECURITY_GSS "no" true
Write	.sysconfig.nfs nil true
Read	.init.scripts.runlevel "rpcbind" $["nfslock":$["start":["3", "5"], "stop":["3", "5"]], "nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "rpcbind":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.comment "rpcbind" $["nfslock":$[], "nfsserver":$[], "rpcbind":$[]]
Read	.init.scripts.runlevel "nfslock" $["nfslock":$["start":["3", "5"], "stop":["3", "5"]], "nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "rpcbind":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.comment "nfslock" $["nfslock":$[], "nfsserver":$[], "rpcbind":$[]]
Read	.init.scripts.runlevel "nfsserver" $["nfslock":$["start":["3", "5"], "stop":["3", "5"]], "nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "rpcbind":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.comment "nfsserver" $["nfslock":$[], "nfsserver":$[], "rpcbind":$[]]
Execute	.target.bash "/bin/systemctl status idmapd.service" $["TERM":"raw"] 0
Execute	.target.bash "/bin/systemctl status svcgssd.service" $["TERM":"raw"] 0
Execute	.target.bash_output "/bin/systemctl stop svcgssd.service" $["TERM":"raw"] $["exit":0, "stderr":"", "stdout":""]
Execute	.target.bash "/bin/systemctl status rpcbind.service" $["TERM":"raw"] 0
Execute	.target.bash_output "/bin/systemctl stop nfsserver.service" $["TERM":"raw"] $["exit":0, "stderr":"", "stdout":""]
Execute	.target.bash_output "/bin/systemctl restart nfslock.service" $["TERM":"raw"] $["exit":0, "stderr":"", "stdout":""]
Execute	.target.bash_output "/bin/systemctl start nfsserver.service" $["TERM":"raw"] $["exit":0, "stderr":"", "stdout":""]
Execute	.target.bash "/bin/systemctl status nfsserver.service" $["TERM":"raw"] 0
Return	true
Dump	Write KO
Read	.target.dir "/projects" nil
Execute	.target.mkdir "/projects" true
Read	.target.dir "/usr" nil
Execute	.target.mkdir "/usr" true
Read	.target.dir "/pub" nil
Execute	.target.mkdir "/pub" true
Write	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]] false
Log	Unable to write to /etc/exports.
Return	false
